; O(n^2) sorting algorithm
.variables
    $a %[5] {2, 8, 5, 1, 3}
	$i %0
	$j %0
	$k %0
	
.data
	LDFI @A %4
	LDFI @B %5

	#outerloopstart
	; If @A (%4) == $i : jump to end
	CMPM @A $i
	JZS #end

	; At the beginning of each inner loop, j = i + 1
	LDFM @C $i
	INCR @C
	STOR $j @C

		#innerloopstart
		; If @B (%5) == $j : Jump to outerloopend
		CMPM @B $j 
		JZS #outerloopend

		PSHM $j

			#swaploop
			; If a[i] < a[j], jump to innerloopend
			LDFM @F $i
			LDFO @C $a
			LDFM @F $j
			CMPO @C $a
			JCC #innerloopend
			JZS #innerloopend

			; Swap $a[j] and $a[j - 1], decrement $j
			LDFM @E $j
			LDFM @F $j
			DECR @F
			SWPO $a $a
			DECM $j
			JMP #swaploop

		#innerloopend
		PULR @C
		STOR $j @C
		INCM $j
		JMP #innerloopstart

	#outerloopend
	INCM $i
	JMP #outerloopstart

	#end
	HALT
	